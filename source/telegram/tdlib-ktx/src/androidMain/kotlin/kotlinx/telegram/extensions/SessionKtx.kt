//
// NOTE: THIS FILE IS AUTO-GENERATED by the "ExtensionsGenerator".kt
// See: https://github.com/tdlibx/td-ktx-generator/
//
package kotlinx.telegram.extensions

import kotlinx.telegram.core.TelegramFlow
import kotlinx.telegram.coroutines.terminateSession
import kotlinx.telegram.coroutines.toggleSessionCanAcceptCalls
import kotlinx.telegram.coroutines.toggleSessionCanAcceptSecretChats
import org.drinkless.td.libcore.telegram.TdApi.*

/**
 * Interface for access [TdApi.Session] extension functions. Can be used alongside with other
 * extension interfaces of the package. Must contain [TelegramFlow] instance field to access its
 * functionality
 */
interface SessionKtx : BaseKtx {
    /**
     * Instance of the [TelegramFlow] connecting extensions to the Telegram Client
     */
    override val api: TelegramFlow

    /**
     * Suspend function, which terminates a session of the current user.
     */
    suspend fun Session.terminate() = api.terminateSession(this.id)

    /**
     * Suspend function, which toggles whether a session can accept incoming calls.
     *
     * @param canAcceptCalls True, if incoming calls can be accepted by the session.
     */
    suspend fun Session.toggleCanAcceptCalls(canAcceptCalls: Boolean) =
        api.toggleSessionCanAcceptCalls(this.id, canAcceptCalls)

    /**
     * Suspend function, which toggles whether a session can accept incoming secret chats.
     *
     * @param canAcceptSecretChats True, if incoming secret chats can be accepted by the session.
     */
    suspend fun Session.toggleCanAcceptSecretChats(canAcceptSecretChats: Boolean) =
        api.toggleSessionCanAcceptSecretChats(this.id, canAcceptSecretChats)
}
